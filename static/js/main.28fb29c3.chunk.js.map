{"version":3,"sources":["assets/logo.png","components/BlankModal.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BlankModal","props","react_default","a","createElement","Fragment","id","style","display","showModal","className","onClick","handleHideModal","padding","children","App","_useState","useState","_useState2","Object","slicedToArray","setShowModal","_useState3","_useState4","quoteType","setQuoteType","_useState5","_useState6","quotePaintLocation","setQuotePaintLocation","components_BlankModal","gridTemplateColumns","border","cursor","backgroundColor","color","type","uk-sticky","uk-navbar","position","zIndex","src","logo","alt","marginTip","fontSize","fontWeight","fontStyle","textAlign","margin","fetch","path","then","response","json","data","console","log","catch","message","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28fb29c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.44c76a62.png\";","import React from 'react'\n\n\nconst BlankModal = (props) => {\n\n\n        return (\n            <>\n\n\n                <div id=\"modal\" style={{ display: props.showModal ? 'block' : 'none'}}>\n\t\t\t    <div id=\"modal-content\">\n\t\t\t\t    <p className=\"center\"><button id=\"modal-close\" onClick={props.handleHideModal}><i className=\"fas fa-times\"></i></button></p> \n                        \n                        <div style={{padding: '20px'}}>\n                            {props.children}\n                        </div>\n\n                    </div>\n                </div>\n\n\n\n            </>\n\n        )\n    \n}\n\nexport default BlankModal","import React, { useState } from 'react';\nimport logo from './assets/logo.png';\nimport './App.css';\nimport BlankModal from './components/BlankModal'\n\n\n\nconst App = () => {\n\n    const [showModal, setShowModal] = useState(false)\n    const [quoteType, setQuoteType] = useState('')\n    const [quotePaintLocation, setQuotePaintLocation] = useState('')\n\n\n    const sendQuoteToBret = () => {\n        let path = 'https://us-central1-semester-at-sea.cloudfunctions.net/sendQuoteToBret?'\n        path += `&FIRSTNAME='John Doe'`\n        fetch(path)\n            .then(response => {\n                return response.json()\n            })\n            .then(data => {\n                console.log(data); \n            })\n            .catch(message => {\n                console.log(message);\n            })\n    }\n\n\n\n    return (\n        <div className=\"App\">\n\n            <BlankModal\n                showModal={showModal}\n                handleHideModal={() => setShowModal(false)}\n            >\n                <p>What type of property needs painting?</p>\n\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr'}}>\n                    {quoteType  === 'home' &&\n                        <div style={{border: '1px solid rgb(40, 154, 207)', cursor: 'pointer', padding: '8px', backgroundColor: 'rgb(40, 154, 207)', color: 'white'}} onClick={() => setQuoteType('home')}>\n                           <span className=\"fas fa-check-circle\"></span> home\n                        </div>\n                    }\n                    {quoteType !== 'home' &&\n                        <div style={{border: '1px solid #CCC', cursor: 'pointer', padding: '8px'}} onClick={() => setQuoteType('home')}>\n                            home\n                        </div>\n                    }\n                    {quoteType  === 'business' &&\n                        <div style={{border: '1px solid rgb(40, 154, 207)', cursor: 'pointer', padding: '8px', backgroundColor: 'rgb(40, 154, 207)', color: 'white'}} onClick={() => setQuoteType('business')}>\n                            <span className=\"fas fa-check-circle\"></span> business\n                        </div>\n                    }\n                    {quoteType !== 'business' &&\n                        <div style={{border: '1px solid #CCC', cursor: 'pointer', padding: '8px'}} onClick={() => setQuoteType('business')}>\n                            business\n                        </div>\n                    }\n                </div>\n\n                <p>What would you like to paint?</p>\n\n                <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr 1fr'}}>\n                    \n                    {quotePaintLocation  === 'interior' &&\n                        <div style={{border: '1px solid rgb(40, 154, 207)', cursor: 'pointer', padding: '8px', backgroundColor: 'rgb(40, 154, 207)', color: 'white'}} onClick={() => setQuotePaintLocation('interior')}>\n                           <span className=\"fas fa-check-circle\"></span> interior\n                        </div>\n                    }\n                    {quotePaintLocation !== 'interior' &&\n                        <div style={{border: '1px solid #CCC', cursor: 'pointer', padding: '8px'}} onClick={() => setQuotePaintLocation('interior')}>\n                            interior\n                        </div>\n                    }\n\n                    {quotePaintLocation  === 'exterior' &&\n                        <div style={{border: '1px solid rgb(40, 154, 207)', cursor: 'pointer', padding: '8px', backgroundColor: 'rgb(40, 154, 207)', color: 'white'}} onClick={() => setQuotePaintLocation('exterior')}>\n                           <span className=\"fas fa-check-circle\"></span> exterior\n                        </div>\n                    }\n                    {quotePaintLocation !== 'exterior' &&\n                        <div style={{border: '1px solid #CCC', cursor: 'pointer', padding: '8px'}} onClick={() => setQuotePaintLocation('exterior')}>\n                            exterior\n                        </div>\n                    }\n\n                    {quotePaintLocation  === 'both' &&\n                        <div style={{border: '1px solid rgb(40, 154, 207)', cursor: 'pointer', padding: '8px', backgroundColor: 'rgb(40, 154, 207)', color: 'white'}} onClick={() => setQuotePaintLocation('both')}>\n                           <span className=\"fas fa-check-circle\"></span> both\n                        </div>\n                    }\n                    {quotePaintLocation !== 'both' &&\n                        <div style={{border: '1px solid #CCC', cursor: 'pointer', padding: '8px'}} onClick={() => setQuotePaintLocation('both')}>\n                            both\n                        </div>\n                    }\n                </div>\n                    \n               \n                <input type=\"text\" className=\"uk-input\" />\n\n            </BlankModal>\n\n            <div uk-sticky=\"sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky; bottom: #transparent-sticky-navbar\">\n                <nav className=\"uk-navbar-container\" uk-navbar style={{ position: 'relative', zIndex: 980 }}>\n\n                    <div className=\"nav-grid\">\n                        <img src={logo} alt=\"Branson Mo Painters\" className=\"logo\" />\n                        <p style={{ marginTip: '4px', fontSize: '24px', fontWeight: '700', fontStyle: 'italic' }}>417-598-8094</p>\n                        <div style={{ textAlign: 'right', margin: '20px 20px 0px 0px' }}>\n                            <button className=\"green-button\" onClick={() => setShowModal(true)}>Get a quote</button>\n                        </div>\n\n                    </div>\n\n                </nav>\n            </div>\n\n\n\n            <div className=\"second-row\">\n\n                <button className=\"green-button\" onClick={sendQuoteToBret}>send quote</button>\n                <h1>Areas We Serve in Missouri and Arkansas</h1>\n\n\n                <p>Branson | Hollister | Kirbyville | Forsyth | Harrison</p>\n            </div>\n\n            <div className=\"fourth-row\">\n\n                <p>Our success as a painting company is due to our service, care and attention to detail we put in every job. We believe communication is the key to both happy customers and professional painting crews. Throughout the house painting process, it is important to us to set clear expectations for our customers and ensure they are being met with integrity and honesty.</p>\n            </div>\n\n\n        </div>\n    )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}